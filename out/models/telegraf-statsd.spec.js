'use strict';Object.defineProperty(exports,'__esModule',{value:true});const chai_1=require('chai');require('mocha');const telegraf_statsd_namespace_1=require('./telegraf-statsd.namespace');describe('Statsd test',()=>{describe('MetricSerializer test',()=>{it('should correctly format \'Counter\' value',()=>{let metric=telegraf_statsd_namespace_1.Statsd.Metric.counter('deploys.test.myservice',1,0.1);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('deploys.test.myservice:1|c|@0.1');metric=telegraf_statsd_namespace_1.Statsd.Metric.counter('deploys.test.myservice',1);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('deploys.test.myservice:1|c');metric=telegraf_statsd_namespace_1.Statsd.Metric.counter('deploys.test.myservice',101);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('deploys.test.myservice:101|c');metric=telegraf_statsd_namespace_1.Statsd.Metric.counter('deploys.test.myservice',-1);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('deploys.test.myservice:-1|c');metric=telegraf_statsd_namespace_1.Statsd.Metric.counter('deploys.test.myservice',0.1);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('deploys.test.myservice:0.1|c');});it('should correctly format \'Gauge\' value',()=>{let metric=telegraf_statsd_namespace_1.Statsd.Metric.gauge('users.current.den001.myapp',32);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('users.current.den001.myapp:32|g');metric=telegraf_statsd_namespace_1.Statsd.Metric.gauge('users.current.den001.myapp',-10);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('users.current.den001.myapp:-10|g');metric=telegraf_statsd_namespace_1.Statsd.Metric.gauge('users.current.den001.myapp',1,0.1);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('users.current.den001.myapp:1|g|@0.1');});it('should correctly format \'Set\' value',()=>{let metric=telegraf_statsd_namespace_1.Statsd.Metric.set('users.unique','101');chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('users.unique:101|s');metric=telegraf_statsd_namespace_1.Statsd.Metric.set('users.unique','test');chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('users.unique:test|s');});it('should correctly format \'Time\' value',()=>{let metric=telegraf_statsd_namespace_1.Statsd.Metric.time('load.time',320);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('load.time:320|ms');metric=telegraf_statsd_namespace_1.Statsd.Metric.time('load.time',200,0.1);chai_1.expect(telegraf_statsd_namespace_1.Statsd.MetricSerializer.serializeMetric(metric)).equal('load.time:200|ms|@0.1');});});});